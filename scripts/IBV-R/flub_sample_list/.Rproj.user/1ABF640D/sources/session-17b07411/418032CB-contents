---
title: "Mutation_analysis"
author: "Brenda_Kiage"
date: "2023-05-19"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r}
library(dplyr)
library(tidyr)
library(stringr)
library(gridExtra)
library(ggplot2)
library(zoo)
library(scales)
library(lubridate)
install.packages("viridis")
library(viridis)
library(ggbreak) 
library(patchwork)

```


```{r HA Victoria lineage}

# Read in the nextclade metadata
nextclade_metadata <- read.csv("~/Desktop/Msc/flub_results/nextclade/vichatotal/nextclade.csv", sep = ";")

#Obtain the names, clade and aa_substitutions
aa_substitutions <- cbind(nextclade_metadata$seqName, nextclade_metadata$clade, nextclade_metadata$aaSubstitutions)
vic_ha_subs <- as.data.frame(aa_substitutions)
colnames(vic_ha_subs) <- c("seqname", "clade","aa_substitutions")

#Transform the substitution column to obtain the  domain
vic_ha_subs<- separate_rows(vic_ha_subs, aa_substitutions, sep = ",")
vic_ha_subs <-vic_ha_subs %>% separate(aa_substitutions, c("domain", "aa_substitution"), sep = ":")

# Transform the substitution column to obtain the positions
positions <- str_extract(vic_ha_subs$aa_substitution, "\\d+")
vic_ha_subs <- cbind(vic_ha_subs, as.numeric(positions))
colnames(vic_ha_subs) <- c("seqname", "clade", "domain", "aa_substitution","position")
#vic_ha_df <- pivot_wider(vic_ha_subs, names_from = position, values_from = aa_substitution)

vic_ha_130 <- subset(vic_ha_subs, position %in% c(116:137,141:150,162:167,194:202))



#Separate the seqname column to obtain collection dates
references <- vic_ha_130[grepl("B/", vic_ha_130$seqname), ]
ref_df <- as.data.frame(references)
ref_df <- ref_df %>% separate(seqname, c("sample_name","country", "segment","collection_date"), sep = "\\|")
#ref_df <- ref_df %>% separate(collection_date, c("year", "month", "date"), sep = "-")
#rownames(ref_df) <- references

ref_df$Month_Yr <- format(as.Date(ref_df$collection_date), "%Y-%m")

ref_counts <- ref_df %>% separate(Month_Yr, c("Year", "Month")) %>%
              group_by(Year, aa_substitution) %>%
              summarise(counts = n())
ref_counts <- subset(ref_counts, counts >= 50 )

ref_counts <- ref_counts %>% mutate(percentage = round((counts/3 * 100), 2))


rm(list = ls())


               


class(ref_counts$Month_Yr)
ref_counts$Month_Yr

ref_df_2016 <- ref_counts[grepl("2016", ref_counts$Month_Yr), ]


p <- ggplot(ref_counts, aes(x = Year, y =counts, group = aa_substitution, color = aa_substitution)) +
  geom_line() +
  labs(x = "Year", y = "Mutation Counts", title = "Mutation Counts Over the Years") +
  scale_y_continuous(breaks=seq(0,20,1))+
  theme_minimal() + theme(legend.position = "none")
p

p <- ggplot(ref_counts, aes(x = Year, y = percentage, fill = aa_substitution)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = "Year", y = "Mutation Counts", title = "Mutation Counts Over the Years") +
  theme(legend.position = "none") +
  scale_y_continuous(breaks=seq(0,20,1))

p
  scale_y_continuous(breaks=seq(0,20,1))+
  theme_minimal() + theme(legend.position = "none")


p1 <- p+scale_y_break(c(1,2)) + scale_y_log10()

p1

ref_counts %>%
  ggplot( aes(x=Year, y=counts, group=aa_substitution, fill=aa_substitution)) +
    geom_bar(stat = "identity") +
    scale_fill_viridis(discrete = TRUE) +
    theme(legend.position="none") +
    ggtitle("Popularity of American names in the previous 30 years") +
    #theme_ipsum() +
    theme(
      legend.position="none",
      panel.spacing = unit(0.1, "lines"),
      strip.text.x = element_text(size = 8),
      axis.text.x = element_text(angle = 90)
    ) +
    facet_wrap(~aa_substitution, scale="free_y")

p3



samples <- metadata_df[!grepl("B/", metadata_df$metadata), ]
sample_df <- as.data.frame(samples)
sample_df$samples <- gsub("'", "", sample_df$samples)
sample_df <- sample_df %>% separate(samples, c("sample_id", "Location","collection_date"), sep = "\\|")
sample_df <- sample_df %>% separate(collection_date, c("year", "month", "date"), sep = "-")
sample_df$year <- gsub("9/1/2020","2020", sample_df$year)
sample_df$year <- gsub("11/11/2019","2019", sample_df$year)
sample_df$year <- gsub("2/11/2021","2021", sample_df$year)
rownames(sample_df) <- samples

mdata <- bind_rows(ref_df, sample_df)
mdata <- mdata[rownames(metadata_df), ]
mdata$label <- rownames(metadata_df)
mdata$Location <- as.factor(mdata$Location)
vic_ha_subs <- vic_ha_subs %>% separate(seqname, c("seqname","country","segment","collection_date"), sep = "\\|")


# Transform the substitution column to obtain the positions
positions <- str_extract(vic_ha_subs$aa_substitution, "\\d+")
vic_ha_subs <- cbind(vic_ha_subs, as.numeric(positions))
colnames(vic_ha_subs) <- c("seqname", "clade", "domain", "aa_substitution","position")
vic_ha_df <- pivot_wider(vic_ha_subs, names_from = position, values_from = aa_substitution)
write_csv(vic_ha_df, "~/Desktop/Msc/flub_results/mutations/vic_ha_mutations.csv")

#Subset to obtain the specific clade of interest
V1A.3aHA_df <- subset(vic_ha_subs, clade == c("V1A.3a"))

# Gives the number of samples within that clade
samples <- unique(V1A.3aHA_df$seqname)

#Get the number of mutations
V1A.3aHA_df %>% group_by(aa_substitution) %>%
          summarise(count = n())

#Create a dataframe containing the counts of mutations and their domains
mutation_df <- V1A.3aHA_df %>% group_by(aa_substitution, domain) %>%
          summarise(count = n())
mutation_df$count <- as.numeric(mutation_df$count)
mutation_df <- mutation_df %>% mutate(percentage = (count/3 * 100))
positions <- str_extract(mutation_df$aa_substitution, "\\d+")
mutation_df <- cbind(mutation_df, as.numeric(positions))
colnames(mutation_df) <- c("aa_substitution","domain","count","percentage","position")

values <- c (116:137,141:150, 162:167,194:202)
mutation_df$epitopes <- ifelse(mutation_df$position %in% values, "Yes","No")


#Plot the mutation frequencies in a bargraph
V1A.3aHA <- ggplot(mutation_df, aes(x = aa_substitution, y = percentage, fill = domain, color = epitopes)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.6), width = 0.6, size = 1) +  # Adjust position and size
  xlab("Amino acid substitution") +
  ylab("Mutated viruses (%)") +
  scale_fill_manual(name = "Domain", values = c("HA1" = "blue", "HA2" = "orange", "SigPep" = "red")) +
  scale_color_manual(values = c("Yes" = "red", "No" = "white")) +  # Increase border font size
  ggtitle("V1A.3a") +
  theme_classic() +
  theme(plot.title = element_text(
    size = 12,
    face = "bold",
    hjust = 0.5),
    axis.text.x = element_text(angle = 90),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "none")
V1A.3aHA

```


```{r NA victoria}
# Read in the nextclade metadata
nextclade_metadata <- read.csv("~/Downloads/NAvic_nextclade.csv", sep = ";")

#Obtain the names, clade and aa_substitutions

aa_substitutions <- cbind(nextclade_metadata$seqName, nextclade_metadata$aaSubstitutions)
vic_na_subs <- as.data.frame(aa_substitutions)
colnames(vic_na_subs) <- c("seqname","aa_substitutions")

## getting the clades form the ha segment dataframe
vic_na_refs <- vic_na_subs %>% filter(grepl("^B/", seqname))
vic_na_refs <- vic_na_refs %>% separate(seqname, c("seqname", "lineage","segment","clade","collection_date"),sep = "\\|") 
vic_na_refs$clade <- gsub("\\bV1AB\\b", "V1A", vic_na_refs$clade)
vic_na_refs <- vic_na_refs %>% unite(seqname, c(seqname, lineage,segment,collection_date),sep = "|") 
vic_ha_samples <- subset(vic_ha_subs, select = c("seqname", "clade"))
vic_ha_samples <- vic_ha_samples %>% filter(!grepl("^B/", seqname))
vic_na_clade <- bind_rows(vic_ha_samples, vic_na_refs)
vic_na_subs <- merge(vic_na_subs, vic_na_clade[,c("seqname","clade")], by="seqname")

#Transform the substitution column to obtain the  domain
vic_na_subs<- separate_rows(vic_na_subs, aa_substitutions, sep = ",")
vic_na_subs$aa_substitutions <- gsub("NA:", "", vic_na_subs$aa_substitutions)
#vic_na_subs <-vic_na_subs %>% separate(aa_substitutions, c("domain", "aa_substitution"), sep = ":")

# Transform the substitution column to obtain the positions
#positions <- str_extract(vic_na_subs$aa_substitution, "\\d+")
#vic_ha_subs <- cbind(vic_na_subs, as.numeric(positions))
#colnames(vic_na_subs) <- c("seqname", "clade", "domain", "aa_substitution","position")

#Subset to obtain the specific clade of interest
V1ANA_df <- subset(vic_na_subs, clade == c("V1A"))

# Gives the number of samples within that clade
samples <- unique(V1ANA_df$seqname)

#Get the number of mutations
V1ANA_df %>% group_by(aa_substitutions) %>%
          summarise(count = n())

#Create a dataframe containinng the counts of mutations and their domains
mutation_df <- V1ANA_df %>% group_by(aa_substitutions) %>%
          summarise(count = n())
mutation_df$count <- as.numeric(mutation_df$count)
mutation_df <- mutation_df %>% mutate(percentage = (count/11 * 100))


#Plot the mutation frequencies in a bargraph
V1ANA <- ggplot(mutation_df, aes(x = aa_substitutions, y = percentage)) +
  geom_bar(stat = "identity", fill="blue") +
  xlab("Amino acid substitution") +
  ylab("Mutated viruses (%)") +
  #scale_fill_manual(name = "Domain", values = c("HA1" = "blue", "HA2" = "orange", "SigPep" = "red")) +
  ggtitle("V1A") +
  theme_classic() +
  theme(plot.title = element_text(
    size = 12,
    face = "bold",
    hjust = 0.5),
    axis.text.x = element_text(angle = 90),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "none")

V1A.3aNA

```


```{r HA for yamagata}
# Read in the nextclade metadata
nextclade_metadata <- read.csv("~/Downloads/HAyam_nextclade.csv", sep = ";")

#Obtain the names, clade and aa_substitutions
aa_substitutions <- cbind(nextclade_metadata$seqName, nextclade_metadata$clade, nextclade_metadata$aaSubstitutions)
yam_aa_subs <- as.data.frame(aa_substitutions)
colnames(yam_aa_subs) <- c("seqname", "clade","aa_substitutions")

#Transform the substitution column to obtain the  domain
yam_aa_subs<- separate_rows(yam_aa_subs, aa_substitutions, sep = ",")
yam_aa_subs <-yam_aa_subs %>% separate(aa_substitutions, c("domain", "aa_substitution"), sep = ":")

# Transform the substitution column to obtain the positions
positions <- str_extract(yam_aa_subs$aa_substitution, "\\d+")
yam_aa_subs <- cbind(yam_aa_subs, as.numeric(positions))
colnames(yam_aa_subs) <- c("seqname", "clade", "domain", "aa_substitution","position")
yam_ha_df <- pivot_wider(yam_aa_subs, names_from = position, values_from = aa_substitution)
write_csv(yam_ha_df, "~/Desktop/Msc/flub_results/mutations/yam_ha_mutations.csv")

#Subset to obtain the specific clade of interest
Y3_df <- subset(yam_aa_subs, clade == c("Y3"))
#V1A.3a.2_df <- V1A.3a.2_df %>% filter(!grepl("^B/", seqname))

# Gives the number of samples within that clade
samples <- unique(Y3_df$seqname)

#Get the number of mutations
Y3_df %>% group_by(aa_substitution) %>%
          summarise(count = n())

#Create a dataframe containinng the counts of mutations and their domains
mutation_df <- Y3_df %>% group_by(aa_substitution, domain) %>%
          summarise(count = n())
mutation_df$count <- as.numeric(mutation_df$count)
mutation_df <- mutation_df %>% mutate(percentage = (count/12 * 100))
positions <- str_extract(mutation_df$aa_substitution, "\\d+")
mutation_df <- cbind(mutation_df, as.numeric(positions))
colnames(mutation_df) <- c("aa_substitution","domain","count","percentage","position")

values <- c (116:137,141:150, 162:167,194:202)
mutation_df$epitopes <- ifelse(mutation_df$position %in% values, "Yes","No")


#Plot the mutation frequencies in a bargraph
Y3HA <- ggplot(mutation_df, aes(x = aa_substitution, y = percentage, fill = domain, color = epitopes)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.6), width = 0.6, size = 1) +  # Adjust position and size
  xlab("Amino acid substitution") +
  ylab("Mutated viruses (%)") +
  scale_fill_manual(name = "Domain", values = c("HA1" = "blue", "HA2" = "orange", "SigPep" = "violet")) +
  scale_color_manual(values = c("Yes" = "red", "No" = "white")) +  # Increase border font size
  ggtitle("Y3") +
  theme_classic() +
  theme(plot.title = element_text(
    size = 12,
    face = "bold",
    hjust = 0.5),
    axis.text.x = element_text(angle = 90),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank())
Y3HA

Y2HA

```

